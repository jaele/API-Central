<!DOCTYPE html>
<html lang="en">
<head>
  <title>API Central</title>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css">
  <link rel="stylesheet" href="stylesheet/style.css">
  <link rel="icon" type="image/x-icon" href="images/globe.ico">

  <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.2/jquery.min.js"></script>
  <script src="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js"></script>
 

</head>


<body>

<!-- /* top header */ -->
<nav class="navbar navbar-inverse">
  <div class="container-fluid">
   
    <div class="collapse navbar-collapse" id="myNavbar">
      <ul class="nav navbar-nav">
        <a class="navbar-brand" href="/">Tumblr API Guide</a>
        <a class="navbar-brand" href="/github">Github API Guide</a>
      </ul>
    </div>
  </div>
</nav>
  
 
<div class="container-fluid text-center">    
  <div class="row content">

 <!-- left side box -->
    <div class="col-sm-2 sidenav">
      <div class="well">
      <% include templates/header.ejs %>
      </div>
    </div>



 <!-- middle box -->
  <div class="col-sm-8 text-left"> 
      
  
    <% include templates/banner.ejs %>
  
    <hr>
    <h3>Setting up Environment to Use API</h3>
      
   
   <p> 
    This step will guide the user through all the implementations to get the API started. Afterwards, there will be an explaination on what these codes will do on the following page to help the user get a better understanding. We will be starting from scratch and installing any required modules for the API to work. So, the next step is to create a directory to store all of our files in. We can create a directory call myapp which will contain all the files needed to use the API. Here are all the steps to follow.
    </p>

    <p>1. Have node.js installed in the following <a href="https://nodejs.org/en/" target="_blank"> link </a> if you don't already have it.
    <p>2. Create a folder call myapp anywhere you want on the desktop. </p>
    <p>3. Create a file call package.json, and copy the codes below into the package.json file in order to install express with handlebars. </p>

 <pre> 
{
  "name": "hello-world",
  "version": "1.0.0",
  "description": "Hello world with express and node.js",
  "main": "app.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "author": "OSU",
  "license": "ISC",
  "dependencies": {
    "body-parser": "^1.14.1",
    "express": "^4.13.2",
    "express-handlebars": "^2.0.1",
    "express-session": "^1.11.3",
    "mysql": "^2.8.0",
    "tumblr.js": "^1.0.0"
  }
}
</pre>


    <p>4. Open up the command prompt in the myapp directory, and type npm install to get all the required modules for express handlebars.</p>
    <p>5. With command prompt still open, type in npm install --save tumblr.js to get all the modules for Tumblr API. 
    More information can be found <a href="https://github.com/tumblr/tumblr.js" target="_blank">here</a>.
    </p>
    <p>6. Create a file called checker.js or any name you want within the myapp directory, and use the code provided down below. </p>

<pre>
var express = require('express');
var app = express();
var handlebars = require('express-handlebars').create({defaultLayout:'main'});
var request = require('request');

app.engine('handlebars', handlebars.engine);
app.set('view engine', 'handlebars');
app.set('port', 3000);

var bodyParser = require('body-parser');
app.use(bodyParser.urlencoded({extended:false}));
app.use(bodyParser.json());

var apiKey = "f92smiWRexvzEL6eIYgC3SMJ4szSCZEvpqiwP9LD5OISyE8eH8";

app.get('/', function(req, res){
  res.render('request');
});

app.get('/requestData',function(req,res,next){
   var context = {};
   var blogname = req.query.userid; 
   context.blogname = blogname; 

   request('https://api.tumblr.com/v2/blog/' + blogname + '.tumblr.com/info?api_key=' + apiKey, function(err, response, body){
   
     var avatar = 'https://api.tumblr.com/v2/blog/'+ blogname+ '.tumblr.com/avatar/128';
     var data = JSON.parse(body);
     context.image = avatar;
     context.title = data.response.blog.title; 
     context.name = data.response.blog.name; 
     context.posts = data.response.blog.posts; 
     context.description = data.response.blog.description;

     return res.render('receiveData',context);
 });
});

app.listen(app.get('port'), function(){
  console.log('Express started on http://localhost:' + app.get('port') + '; press Ctrl-C to terminate.')
});
</pre>

<p>7. Create another folder within myapp directory called views.</p>
<p>8. Create a file called request.handlebars, and use the code provided down below. </p>

<pre>

&lt;form action="/requestData" method="GET"&gt;
  &lt;fieldset>
    &lt;legend&gt;&lt;h2&gt;Search for a User&lt;/h2&gt;&lt;/legend&gt;
    &lt;label for="user"&gt;User&lt;/label&gt;
    &lt;input type="text" name="userid" id="userid"&gt;
    &lt;input type="submit" name="submit"&gt;
  &lt;/fieldset&gt;
&lt;/form&gt;

</pre>

<p>9. Create another file called receiveData.handlebars, and use the code provided down below. </p>

<pre>
&lt;img src={{image}}&gt;
&lt;p&gt;Title: {{title}}&lt;/p&gt;
&lt;p&gt;Name: {{name}}&lt;/p&gt;
&lt;p&gt;Posts: {{posts}}&lt;/p&gt;
&lt;p&gt;Description: {{description}}&lt;/p&gt;

</pre>


<p>10. Create a folder within views directory called layouts.</p>
<p>11. Within layouts directory, create a file called main.handlebars, and use the code provided down below. </p>


<pre>

&lt;!doctype html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;title> Tumblr Client Information&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
  {{{body}}}
&lt;/body&gt;
&lt;/html&gt;

</pre>

<p> Once all of that is finished, continue on to the next page, and I'll explain things to get them working!</p>



      <p>
        <a class="btn btn-warning btn-sml" href="/getkey" role="button">&laquo; Previous </a> 
        <a class="btn btn-warning btn-sml" href="/display" role="button">Continue &raquo;</a>
      </p>

  </div>


<!-- /* right side box */ -->
    <div class="col-sm-2 sidenav">

      <div class="well">
        <a href="/about"><p>About</p></a>
      </div>

      <div class="well">
        <a href="/contact"><p>Contact</p></a>
      </div>

    </div>

  </div>
</div>


<footer class="container-fluid text-center">
  <p>&copy; James Le 2018 </p>
</footer>

</body>
</html>